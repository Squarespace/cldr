
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

task mergeCodeCoverage(type: JacocoMerge) {
  destinationFile = file("$buildDir/jacoco/merged.exec")
  doFirst {
    executionData -= executionData.filter { !it.exists() }
  }
}

task rootCoverageReport(type: JacocoReport) {
  jacocoClasspath = configurations.jacocoAnt

  dependsOn mergeCodeCoverage
  executionData mergeCodeCoverage.destinationFile
  subprojects.each { sub -> 
    sourceSets sub.sourceSets.main
  }
  reports {
    html {
      enabled true
    }
    xml {
      enabled true
    }
  }

  afterEvaluate {
    classDirectories = files(classDirectories.files.collect {
      fileTree(
        dir: it,
        exclude: [
          // too much generated code to test for coverage
          'com/squarespace/cldr/dates/_*',
          'com/squarespace/cldr/numbers/_*',
          'com/squarespace/cldr/plurals/_*'
        ]
      )
    })

    /*.plus(files(classDirectories.files.collect {
      fileTree(
        dir: it,
        include: [
          'com/squarespace/cldr/numbers/_NumberFormatter_en.class'
        ]
      )
    }))*/

  }
}

task rootTestReport(type: TestReport) {
  destinationDir = file("$buildDir/reports/tests")
}

subprojects.each { sub ->
  sub.tasks.withType(Test) { task ->
    mergeCodeCoverage.executionData task
    rootTestReport.reportOn task
  }
}

def checkTask = tasks.findByName('check') ?: tasks.create('check')

checkTask.dependsOn rootCoverageReport, rootTestReport

coveralls {
  sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
  jacocoReportPath = "${buildDir}/reports/jacoco/rootCoverageReport/rootCoverageReport.xml"
}

